name: Build and deploy

on:
  push:
    branches:
      - main
    tags:
      - v*


jobs:
  build-graph:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: 6analyse
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.0"
      
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: pip install pandas seaborn networkx snakemake
      
      - name: Build
        run: snakemake -c2
      
      - uses: actions/upload-artifact@v3
        with:
          name: built-output
          path: 6analyse/output/
          retention-days: 3

  build-paper:
    needs: build-graph
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Download graphs
        uses: actions/download-artifact@v3
        with:
          name: built-output
          path: 6analyse/output

      - name: Install LaTeX
        run: |
          sudo apt-get update -y
          sudo apt-get install texlive dvipng \
            texlive-latex-extra texlive-latex-recommended \
            texlive-fonts-recommended texlive-lang-japanese \
            texlive-xetex cm-super
            
      - name: Instal pandoc and pandoc-crossref
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.17.0.1/pandoc-2.17.0.1-1-amd64.deb
          sudo dpkg -i pandoc-2.17.0.1-1-amd64.deb
          wget https://github.com/lierdakil/pandoc-crossref/releases/download/v0.3.12.2/pandoc-crossref-Linux.tar.xz
          tar -xvf pandoc-crossref-Linux.tar.xz
          sudo mv pandoc-crossref /bin

      - name: Create pdf
        working-directory: 7paper
        run: make -j2

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: paper
          path: 7paper/*.pdf
          retention-days: 3

  deploy-to-gh-pages:
    needs: [build-graph, build-paper]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Download graphs
        uses: actions/download-artifact@v3
        with:
          name: built-output
          path: output

      - name: Download paper
        uses: actions/download-artifact@v3
        with:
          name: paper
          path: output/paper

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: output
          publish_branch: output

  deploy-to-heroku:
    needs: build-graph
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Download graphs
        uses: actions/download-artifact@v3
        with:
          name: built-output
          path: 6analyse/deployment/public

      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          appdir: 6analyse/deployment
          procfile: 6analyse/deployment/procfile
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
